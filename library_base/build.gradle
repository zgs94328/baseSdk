plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdk 32
    defaultConfig {
        minSdk 21
        targetSdk 32

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }

    }
    buildTypes {
        release {
            // 启用代码压缩、优化及混淆
            minifyEnabled false
            // 启用资源压缩，需配合 minifyEnabled=true 使用
            zipAlignEnabled false  //压缩优化
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug{
            // 启用代码压缩、优化及混淆
            minifyEnabled false
            // 启用资源压缩，需配合 minifyEnabled=true 使用
            zipAlignEnabled false  //压缩优化
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    buildFeatures {
        dataBinding = true
    }
}

dependencies {
    //原生框架
    api 'androidx.core:core-ktx:1.7.0'
    api 'androidx.appcompat:appcompat:1.3.0'
    api 'androidx.startup:startup-runtime:1.2.0-alpha01'
    api 'com.google.android.material:material:1.4.0'
    api 'androidx.constraintlayout:constraintlayout:2.0.4'
    api 'com.google.android:flexbox:2.0.1'

    //lifecycle
    api "androidx.lifecycle:lifecycle-runtime-ktx:2.2.0-alpha05"
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    //万能adapter
    api 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4'
    //图片加载
    api 'com.github.bumptech.glide:glide:4.14.2'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.14.2'
    api 'com.tencent:mmkv:1.0.23'//本地序列化存储
    //图片(视频)选择器-预览
    api 'io.github.lucksiege:pictureselector:v3.10.7' // PictureSelector 基础 (必须)
    api 'io.github.lucksiege:compress:v3.10.7' // 图片压缩 (按需引入)
    api 'io.github.lucksiege:ucrop:v3.10.7'    // 图片裁剪 (按需引入)
    //smart:refresh
    api 'com.scwang.smart:refresh-layout-kernel:2.0.1'      //核心必须依赖
    api 'com.scwang.smart:refresh-header-classics:2.0.1'    //经典刷新头
    api 'com.scwang.smart:refresh-footer-classics:2.0.1'    //经典加载
    //webview agentweb
    api 'com.github.Justson.AgentWeb:agentweb-core:v5.0.6-androidx' // (必选)
    api 'com.github.Justson.AgentWeb:agentweb-filechooser:v5.0.6-androidx' // (可选)
    api 'com.github.Justson:Downloader:v5.0.4-androidx'

    //数据倒灌
    api 'com.kunminx.arch:unpeek-livedata:7.8.0'
    //快速ui开发框架
    api 'com.github.RuffianZhong:RWidgetHelper:androidx.v0.0.14'

    //屏幕适配
    api 'com.github.JessYanCoding:AndroidAutoSize:v1.2.1'
    //gson
    api 'com.google.code.gson:gson:2.9.0'

    //沉浸式状态栏
    api 'com.geyifeng.immersionbar:immersionbar:3.2.2'// 基础依赖包，必须要依赖
    api 'com.geyifeng.immersionbar:immersionbar-ktx:3.2.2'// kotlin扩展（可选）
    api 'com.geyifeng.immersionbar:immersionbar-components:3.2.2'// fragment快速实现（可选）已废弃

    //banner
    api 'com.github.zhpanvip:bannerviewpager:3.5.7'
    //动态权限
    api 'com.github.getActivity:XXPermissions:16.6'
    //dialog
    api 'com.github.li-xiaojun:XPopup:2.9.19'
    //状态页
    api 'com.kingja.loadsir:loadsir:1.3.8'
    //arouter
    api 'com.alibaba:arouter-api:1.5.2'
    annotationProcessor 'com.alibaba:arouter-compiler:1.2.2'

}